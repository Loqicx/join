@use "./../../../../styles/variables.scss" as *;
@use "../../../../styles/mixings.scss" as *;

.add-contact-button {
  background-color: $color-primary;
  color: $color-white;
  border: none;
  padding: 10px 12px;
  font-size: 26px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  box-sizing: border-box;

  &.icon-button {
    gap: 0;
  }

  &:hover {
    background-color: $color-primary-hover;
    box-shadow: 2px 4px 4px rgba(0, 0, 0, 0.203);
    transform: scale(1.018);
    transition: transform 0.4s ease-out;
  }
}

.icon {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 32px;
  height: 32px;

  ::ng-deep svg {
    path {
      fill: $color-white;
    }
  }
}

.icon-invert {
  stroke: $color-primary;

  ::ng-deep svg {
    path {
      fill: $color-primary;
    }
  }
}

.invert {
  background-color: $color-white !important;
  color: $color-primary;
  border: 2px solid $color-primary;

  &:hover {
    color: $color-primary-hover;
    border-color: $color-primary-hover;
    box-shadow: 2px 4px 4px rgba(0, 0, 0, 0.203);
    transform: scale(1.018);
    transition: transform 0.4s ease-out;

    .icon-invert {
      stroke: $color-primary-hover;

      ::ng-deep svg {
        path {
          fill: $color-primary-hover;
        }
      }
    }
  }
}

.round {
  border-radius: 50%;
  padding: 8px !important;
}

.xsmall {
  height: 56px;
  width: 56px;

  .icon {
    height: 32px;
    width: 32px;
  }
}

.small {
  height: 42px;
}

.medium {
  height: 48px;
  min-width: 80px;
  max-width: 280px;
}

.large {
  height: 48px;
  min-width: 100%;
  max-width: 420px;
}

.dynamic {
  height: 53px;
  width: 100%;
  padding: 10px 16px;
}

.priority {
  height: 56px;
  width: 136px;

  @include breakpoint-down("xl") {
    height: 48px;
    width: 112px;
  }

  @include breakpoint-down("md") {
    height: 56px;
    width: 136px;
  }

  @include breakpoint-down("sm") {
    height: 42px;
    width: 96px;
    font-size: 16px !important;
  }

  @include breakpoint-down("xsm") {
    height: 42px;
    width: 88px;
    font-size: 14px !important;
  }
}

.invert.danger {
  color: $color-danger-red;
  border-color: $color-danger-red;

  .icon-invert {
    stroke: $color-danger-red;

    ::ng-deep svg {
      path {
        fill: $color-danger-red;
      }
    }
  }

  &:hover {
    color: $color-danger-red-hover;
    border-color: $color-danger-red-hover;

    .icon-invert {
      stroke: $color-danger-red-hover;

      ::ng-deep svg {
        path {
          fill: $color-danger-red-hover;
        }
      }
    }
  }
}

.danger:not(.invert) {
  border-color: $color-danger-red;
  background-color: $color-danger-red;

  &:hover:not(.active) {
    border-color: $color-danger-red-hover;
    background-color: $color-danger-red-hover;
  }
}

.invert.warn {
  color: $color-warn-yellow;
  border-color: $color-warn-yellow;

  .icon-invert {
    stroke: $color-warn-yellow;

    ::ng-deep svg {
      path {
        fill: $color-warn-yellow;
      }
    }
  }

  &:hover {
    color: $color-warn-yellow-hover;
    border-color: $color-warn-yellow-hover;

    .icon-invert {
      stroke: $color-warn-yellow-hover;

      ::ng-deep svg {
        path {
          fill: $color-warn-yellow-hover;
        }
      }
    }
  }
}

.warn:not(.invert) {
  border-color: $color-warn-yellow;
  background-color: $color-warn-yellow;

  &:hover:not(.active) {
    border-color: $color-warn-yellow-hover;
    background-color: $color-warn-yellow-hover;
  }
}

.invert.success {
  color: $color-success-green;
  border-color: $color-success-green;

  .icon-invert {
    stroke: $color-success-green;

    ::ng-deep svg {
      path {
        fill: $color-success-green;
      }
    }
  }

  &:hover {
    color: $color-success-green-hover;
    border-color: $color-success-green-hover;

    .icon-invert {
      stroke: $color-success-green-hover;

      ::ng-deep svg {
        path {
          fill: $color-success-green-hover;
        }
      }
    }
  }
}

.success:not(.invert) {
  border-color: $color-success-green;
  background-color: $color-success-green;

  &:hover:not(.active) {
    border-color: $color-success-green-hover;
    background-color: $color-success-green-hover;
  }
}

.priority.success:not(.active):not(.invert) {
  border: 0.5px solid $color-text;
  background-color: $color-white;
  color: $color-black;

  font-weight: 500;

  .icon {
    stroke: $color-success-green;

    ::ng-deep svg {
      path {
        fill: $color-success-green;
      }
    }
  }
}

.priority.warn:not(.active):not(.invert) {
  border: 0.5px solid $color-text;
  background-color: $color-white;
  color: $color-black;

  font-weight: 500;

  .icon {
    stroke: $color-warn-yellow;

    ::ng-deep svg {
      path {
        fill: $color-warn-yellow;
      }
    }
  }
}

.priority.danger:not(.active):not(.invert) {
  border: 0.5px solid $color-text;
  background-color: $color-white;
  color: $color-black;

  font-weight: 500;

  .icon {
    stroke: $color-danger-red;

    ::ng-deep svg {
      path {
        fill: $color-danger-red;
      }
    }
  }
}

.border-none {
  border: none;
  outline: none;
}

.priority {
  &:hover {
    box-shadow: 0px 2px 1px 1px $color-text;
    transform: scale(1.005);
  }
}

.priority.active {
  &:hover {
    box-shadow: 0px 2px 1px 1px $color-text;
    transform: scale(1);
  }
}
