name: Build and deploy

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type (major, minor or bugfix)"
        required: true
        default: "minor"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Set Git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          echo "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Calculate next version
        id: next_version
        run: |
          latest=${{ steps.get_tag.outputs.latest_tag }}
          if [[ -z "$latest" ]]; then
            latest="0.0.0"
          fi
          IFS='.' read -r major minor patch <<< "$latest"
          case "${{ github.event.inputs.release_type }}" in
            major)
              major=$((major+1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor+1))
              patch=0
              ;;
            bugfix)
              patch=$((patch+1))
              ;;
            *)
              echo "Unknown release type!"; exit 1
              ;;
          esac
          next="$major.$minor.$patch"
          echo "Next version: $next"
          echo "next_version=$next" >> $GITHUB_OUTPUT

      - name: Create release branch
        id: create_branch
        run: |
          branch="release/v${{ steps.next_version.outputs.next_version }}"
          git checkout -b $branch
          echo "branch=$branch" >> $GITHUB_OUTPUT

      - name: Push release branch
        run: |
          git push origin HEAD

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"

      - name: Install dependencies
        run: npm ci

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Build Angular project
        run: ng build

      - name: Create and push tag
        run: |
          git tag ${{ steps.next_version.outputs.next_version }}
          git push origin ${{ steps.next_version.outputs.next_version }}

      - name: Deploy to FTP server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "./dist/join/browser/"
          server-dir: "/angular_projects/join-mmc/"
          protocol: "ftp"

      - name: Delete remote release branch
        run: |
          git push origin --delete ${{ steps.create_branch.outputs.branch }}
